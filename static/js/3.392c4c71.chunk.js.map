{"version":3,"sources":["components/hoc/AuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/Programmyi-dlya-sozdaniya-avatarok.png","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Post","className","classes","item","itemImg","src","alt","itemMessage","message","likeCount","MyPosts","memo","Posts","postsData","reverse","map","post","likescount","id","content","postsBlock","myPosts","AddPostFormRedux","onSubmit","values","addPost","textAreaValuePost","posts","reduxForm","form","inputsBtns","handleSubmit","Field","placeholder","rows","cols","textarea","component","Textarea","name","validate","requiredField","maxLength100","addPostBtn","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","ProfileStatusWithHOoks","useState","editMode","setEditMode","status","setStatus","useEffect","inputWrapper","onDoubleClick","onChange","e","currentTarget","autoFocus","input","onBlur","updateStatus","ProfileDataFormReduxForm","aboutDescription","Input","type","aboutContacts","aboutContactsLinks","keys","profile","contacts","key","error","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","onClick","Contact","href","target","rel","ProfileInfo","descriptionBlock","avatar","photos","large","userphoto","about","initialValues","formData","saveProfile","then","files","savePhoto","Profile","ProfileContainer","userId","match","params","AuthUser","userProfileThunk","getStatus","refreshProfile","prevProps","compose","withRouter"],"mappings":"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","file":"static/js/3.392c4c71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  \r\n  let ConectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConectedAuthRedirectComponent\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoImg\":\"ProfileInfo_profileInfoImg__L8TPb\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3Zt8j\",\"avatar\":\"ProfileInfo_avatar__2pFrT\",\"aboutDescription\":\"ProfileInfo_aboutDescription__3MTYY\",\"aboutContacts\":\"ProfileInfo_aboutContacts__1vqzM\",\"aboutContactsLinks\":\"ProfileInfo_aboutContactsLinks__GCB7n\",\"status\":\"ProfileInfo_status__2vjbd\",\"input\":\"ProfileInfo_input__1-BbV\",\"error\":\"ProfileInfo_error__16DNL\"};","export default __webpack_public_path__ + \"static/media/Programmyi-dlya-sozdaniya-avatarok.d393fa70.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1U-D8\",\"postsBlock\":\"MyPosts_postsBlock__1TRPq\",\"myPosts\":\"MyPosts_myPosts__26IKL\",\"posts\":\"MyPosts_posts__2-ySP\",\"textarea\":\"MyPosts_textarea__ks6vM\",\"addPostBtn\":\"MyPosts_addPostBtn__3a33e\",\"inputsBtns\":\"MyPosts_inputsBtns__fKCVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__t-YW9\",\"itemMessage\":\"Post_itemMessage__35NWq\",\"likeCount\":\"Post_likeCount__33XZY\"};","import classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n    <div className={classes.item}>\r\n      <div className={classes.itemImg}>\r\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTgolBdeaXdt7hZ4G28YiA8shOCg4jkBg08uA&usqp=CAU' alt='Avatar...'/>\r\n        <p className={classes.itemMessage}> {props.message} </p>\r\n      </div>\r\n      \r\n\r\n      <div className={classes.likeCount}>\r\n        <span> Like</span> {props.likeCount}\r\n      </div>\r\n\r\n    </div>\r\n\r\n           \r\n  )\r\n}\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../common/formControls/FormsContols'\r\nimport { maxLength100, requiredField } from '../../common/validators/validators'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let Posts = [...props.postsData].reverse().map(post => (<Post message={post.message} key={post.id} likeCount = {post.likescount}/>))\r\n\r\n\r\n  const addNewPost = (values) =>{\r\n    props.addPost(values.textAreaValuePost)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n       \r\n       <div className={classes.postsBlock}>\r\n         <h3 className={classes.myPosts}>\r\n           My Posts\r\n         </h3>\r\n\r\n         <AddPostFormRedux onSubmit={addNewPost}/>\r\n\r\n         <div className={classes.posts}>\r\n\r\n           { Posts }\r\n      \r\n         </div>\r\n\r\n       </div>\r\n       \r\n     </div>\r\n  )\r\n})\r\n\r\nconst AddNewPostArea = (props) => {\r\n  return (\r\n    <form className={classes.inputsBtns} onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field \r\n            \r\n            placeholder='What you think?' \r\n            rows='7' \r\n            cols='70' \r\n            className={classes.textarea} \r\n            component={Textarea}\r\n            name='textAreaValuePost'\r\n            validate={[requiredField, maxLength100]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={classes.addPostBtn} >Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddPostFormRedux = reduxForm({form: 'profilePostValue'})(AddNewPostArea)\r\n\r\n\r\n\r\n\r\n\r\nexport default MyPosts","\r\nimport { connect } from 'react-redux'\r\nimport { addPostActionCreator } from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }  \r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (textAreaValuePost) => {\r\n      dispatch(addPostActionCreator(textAreaValuePost))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n\r\n\r\n// return (\r\n//   <StoreContext.Consumer>\r\n//     {\r\n//       (store) => {\r\n//         let state = store.getState()\r\n//         const onAddPost = () => {\r\n//           store.dispatch(addPostActionCreator())\r\n          \r\n//         }\r\n      \r\n//         const onPostChange = (text) => {\r\n//           store.dispatch(updateNewPostActionCreater(text))\r\n//         }\r\n//         return <MyPosts \r\n//             updateNewPostText = { onPostChange } \r\n//             addPost = { onAddPost } \r\n//             postsData={state.profilePage.postsData}\r\n//             newPostText = {state.profilePage.newPostText}\r\n//           />\r\n//         }\r\n//     }\r\n    \r\n//   </StoreContext.Consumer>\r\n// )","import React, { useEffect, useState } from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHOoks = (props) =>{\r\n\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n   }\r\n \r\n\r\n  return (\r\n    <div className={classes.inputWrapper}>\r\n      \r\n      { !editMode &&\r\n        <div className={classes.status}>\r\n          STATUS: \r\n          <span onDoubleClick={activateEditMode} > {props.status || 'no_status'}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input  \r\n            onChange={onStatusChange} \r\n            autoFocus={true}  \r\n            className={classes.input}\r\n            onBlur={deactivateEditMode} \r\n            value={status}\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileStatusWithHOoks","import classes from './ProfileInfo.module.css'\r\nimport { Input, Textarea } from '../../common/formControls/FormsContols'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div className={classes.aboutDescription}>Name:  \r\n    { \r\n      <Field placeholder={'Name'} component={Input} name={'fullName'} validate={[]}/>\r\n    } \r\n    </div>\r\n    <div className={classes.aboutDescription}>About me:\r\n    { \r\n      <Field placeholder={'About me'} component={Textarea} name={'aboutMe'} validate={[]}/>\r\n    }  \r\n    </div>\r\n    <div className={classes.aboutDescription}>Looking for a job:\r\n    { \r\n      <Field  component={Input} type='checkbox' name={'lookingForAJob'} validate={[]}/>\r\n    }  \r\n    </div>\r\n    <div className={classes.aboutDescription}>My professional skills:\r\n    { \r\n      <Field  placeholder={'Looking for a job description'} component={Textarea}  name={'lookingForAJobDescription'} validate={[]}/>\r\n    }  \r\n    </div>\r\n          <p className={classes.aboutContacts}>Contacts:</p>\r\n          <ul className={classes.aboutContactsLinks}>\r\n\r\n            {\r\n              Object.keys(props.profile.contacts).map(key => {\r\n                return <div key={key} >\r\n                  <b>\r\n                    {key}: <Field placeholder={key} component={Input} name={'contacts.' + key} validate={[]}/>\r\n                  </b>\r\n                </div>\r\n              })\r\n            }\r\n            \r\n           \r\n          </ul>\r\n          \r\n            <button  >Save</button>\r\n            {\r\n              props.error && <div className={classes.error}> {props.error} </div>\r\n            }\r\n          \r\n  </form>\r\n  }\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataFormReduxForm","import Preloader from '../../common/preloader/preloader'\r\nimport classes from './ProfileInfo.module.css'\r\nimport userphoto from '../../../assets/Programmyi-dlya-sozdaniya-avatarok.png'\r\nimport ProfileStatusWithHOoks from './ProfileStatusWithHooks'\r\nimport { useState } from 'react'\r\nimport ProfileDataFormReduxForm from './ProfileDataForm'\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\nlet [editMode, setEditMode] = useState(false)\r\n\r\n\r\n\r\nif(!props.profile){\r\n  return <Preloader />\r\n}\r\nconst mainPhotoSelected = (e) => {\r\n  if(e.target.files.length) {\r\n    props.savePhoto(e.target.files[0])\r\n  }\r\n}\r\n\r\nconst onSubmit = (formData) => {\r\n   props.saveProfile(formData).then(() => {\r\n    setEditMode(false)\r\n   })\r\n   \r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.descriptionBlock}>\r\n\r\n        <div className={classes.avatar}>\r\n          <img \r\n            src={props.profile.photos.large != null \r\n            ? props.profile.photos.large \r\n            : userphoto} \r\n            alt=\"ava\" />\r\n            \r\n        </div>\r\n        \r\n        <div className={classes.about}>\r\n          <ProfileStatusWithHOoks status={props.status} {...props}/>\r\n\r\n          {\r\n            editMode \r\n            ? \r\n            <ProfileDataFormReduxForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} /> \r\n            : \r\n            <ProfileData \r\n              goToEditMode={() => {setEditMode(true)}} \r\n              profile={props.profile} \r\n              isOwner={props.isOwner} \r\n              \r\n            />\r\n          }\r\n          \r\n          {\r\n            props.isOwner && <input type={'file'} onChange={ mainPhotoSelected } />\r\n          }\r\n        </div>\r\n        \r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode }) => {\r\n  \r\nreturn <div>\r\n  <p className={classes.aboutDescription}>Name: <span>{profile.fullName}</span>  </p>\r\n          <p className={classes.aboutDescription}>About me: <span>{profile.aboutMe}</span>  </p>\r\n          <p className={classes.aboutDescription}>Looking for a job: <span>{profile.lookingForAJob ? 'Yes' : 'No'}</span>  </p>\r\n          <p className={classes.aboutDescription}>My professional skills: <span>{profile.lookingForAJobDescription}</span>  </p>\r\n          <p className={classes.aboutContacts}>Contacts:</p>\r\n          <ul className={classes.aboutContactsLinks}>\r\n\r\n            {\r\n\r\n              Object.keys(profile.contacts).map(key => {\r\n                if(profile.contacts[key]){\r\n                  return <Contact key={key}  contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                } else {\r\n                  return null\r\n                }\r\n                \r\n              })\r\n            }\r\n            \r\n           \r\n          </ul>\r\n          {\r\n            isOwner && <button onClick={goToEditMode } >Edit</button>\r\n          }\r\n          \r\n</div>\r\n}\r\n\r\n\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <li> {contactTitle}: <a href={contactValue} target='_blank' rel='noreferrer'>{contactValue}</a>  </li>\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo","import MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n\r\n      <ProfileInfo savePhoto={props.savePhoto} profile={props.profile} {...props} isOwner={props.isOwner} saveProfile={props.saveProfile}/>\r\n      <MyPostsContainer/>\r\n       \r\n     </div>\r\n  )\r\n}\r\nexport default Profile","\r\nimport React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getStatus, savePhoto, saveProfile, updateStatus, userProfileThunk } from '../../redux/profileReducer'\r\nimport { withRouter } from 'react-router'\r\nimport { withAuthRedirect } from '../hoc/AuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId){\r\n      userId = this.props.AuthUser\r\n    }\r\n    this.props.userProfileThunk(userId)\r\n\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n      this.refreshProfile()\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <Profile\r\n      isOwner = {!this.props.match.params.userId}\r\n      {...this.props} \r\n      profile={this.props.profile}\r\n      savePhoto = {this.props.savePhoto}\r\n      />\r\n    )\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  AuthUser: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, \r\n    {\r\n      userProfileThunk,\r\n      getStatus,\r\n      updateStatus,\r\n      savePhoto,\r\n      saveProfile\r\n    }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}