{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/Programmyi-dlya-sozdaniya-avatarok.png","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Post","props","className","classes","item","itemImg","src","alt","itemMessage","message","likeCount","MyPosts","React","memo","Posts","postsData","reverse","map","post","likescount","id","content","postsBlock","myPosts","AddPostFormRedux","onSubmit","values","addPost","textAreaValuePost","posts","reduxForm","form","inputsBtns","handleSubmit","Field","placeholder","rows","cols","textarea","component","Textarea","name","validate","requiredField","maxLength100","addPostBtn","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","ProfileStatusWithHOoks","profileStatus","useState","editMode","setEditMode","status","setStatus","useDispatch","useEffect","inputWrapper","onDoubleClick","onChange","e","currentTarget","autoFocus","input","onBlur","updateStatus","ProfileDataFormReduxForm","aboutDescription","Input","type","aboutContacts","aboutContactsLinks","keys","profile","contacts","key","error","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","onClick","Contact","href","target","rel","ProfileInfo","useSelector","descriptionBlock","avatar","photos","large","userphoto","about","initialValues","formData","saveProfile","then","files","savePhoto","Profile","userId","useParams","authUser","auth","authRedirect","isAuth","refreshProfile","userProfileThunk","getStatus","prevId","ref","useRef","current","usePrevious","to"],"mappings":"sJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,iBAAmB,sCAAsC,OAAS,4BAA4B,iBAAmB,sCAAsC,cAAgB,mCAAmC,mBAAqB,wCAAwC,OAAS,4BAA4B,MAAQ,2BAA2B,MAAQ,6B,iCCD/Y,QAA0B,gE,oBCCzCD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,QAAU,yBAAyB,MAAQ,uBAAuB,SAAW,0BAA0B,WAAa,4BAA4B,WAAa,8B,oBCA3PD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,0BAA0B,UAAY,0B,wKCoBjFC,EAnBF,SAACC,GACZ,OAEE,sBAAKC,UAAWC,IAAQC,KAAxB,UACE,sBAAKF,UAAWC,IAAQE,QAAxB,UACE,qBAAKC,IAAI,sGAAsGC,IAAI,cACnH,oBAAGL,UAAWC,IAAQK,YAAtB,cAAqCP,EAAMQ,QAA3C,UAIF,sBAAKP,UAAWC,IAAQO,UAAxB,UACE,yCADF,IACsBT,EAAMS,iBCH5BC,EAAUC,IAAMC,MAAK,SAAAZ,GAEzB,IAAIa,EAAQ,YAAIb,EAAMc,WAAWC,UAAUC,KAAI,SAAAC,GAAI,OAAK,cAAC,EAAD,CAAMT,QAASS,EAAKT,QAAuBC,UAAaQ,EAAKC,YAA3BD,EAAKE,OAQ/F,OACE,qBAAKlB,UAAWC,IAAQkB,QAAxB,SAEG,sBAAKnB,UAAWC,IAAQmB,WAAxB,UACE,oBAAIpB,UAAWC,IAAQoB,QAAvB,sBAIA,cAACC,EAAD,CAAkBC,SAbN,SAACC,GAClBzB,EAAM0B,QAAQD,EAAOE,sBAchB,qBAAK1B,UAAWC,IAAQ0B,MAAxB,SAEIf,YA+BPU,EAAmBM,YAAU,CAACC,KAAM,oBAAjBD,EArBF,SAAC7B,GACtB,OACE,uBAAMC,UAAWC,IAAQ6B,WAAYP,SAAUxB,EAAMgC,aAArD,UACE,8BACE,cAACC,EAAA,EAAD,CAEIC,YAAY,kBACZC,KAAK,IACLC,KAAK,KACLnC,UAAWC,IAAQmC,SACnBC,UAAWC,IACXC,KAAK,oBACLC,SAAU,CAACC,IAAeC,SAGhC,8BACE,wBAAQ1C,UAAWC,IAAQ0C,WAA3B,8BAWOlC,IC/CAmC,EAFUC,aAdD,SAACC,GACvB,MAAO,CACLjC,UAAWiC,EAAMC,YAAYlC,UAC7BmC,YAAaF,EAAMC,YAAYC,gBAGR,SAACC,GAC1B,MAAO,CACLxB,QAAS,SAACC,GACRuB,EAASC,YAAqBxB,QAKXmB,CAA6CpC,G,4CCgCvD0C,EA/CgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAChC,EAA8BC,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASD,GAAnC,mBAAKI,EAAL,KAAaC,EAAb,KACMR,EAAWS,cAEjBC,qBAAU,WACRF,EAAUL,KACT,CAACA,IAeJ,OACE,sBAAKpD,UAAWC,IAAQ2D,aAAxB,WACIN,GACA,sBAAKtD,UAAWC,IAAQuD,OAAxB,oBAEE,sBAAMK,cAlBW,WACvBN,GAAY,IAiBN,SACGH,GAAiB,2CAIvBE,GACC,8BACE,uBACEQ,SAjBa,SAACC,GACtBN,EAAUM,EAAEC,cAAczE,QAiBlB0E,WAAW,EACXjE,UAAWC,IAAQiE,MACnBC,OAzBiB,WACzBZ,GAAY,GACZN,EAASmB,YAAaZ,KAwBdjE,MAAOiE,UCQJa,EAFkBzC,YAAU,CAAEC,KAAM,gBAAlBD,EA9CT,SAAC7B,GACvB,OACE,uBAAMwB,SAAUxB,EAAMgC,aAAtB,UACE,sBAAK/B,UAAWC,IAAQqE,iBAAxB,kBAEG,cAACtC,EAAA,EAAD,CAAOC,YAAa,OAAQI,UAAWkC,IAAOhC,KAAM,WAAYC,SAAU,QAE7E,sBAAKxC,UAAWC,IAAQqE,iBAAxB,sBAEG,cAACtC,EAAA,EAAD,CAAOC,YAAa,WAAYI,UAAWC,IAAUC,KAAM,UAAWC,SAAU,QAEnF,sBAAKxC,UAAWC,IAAQqE,iBAAxB,+BAEG,cAACtC,EAAA,EAAD,CAAOK,UAAWkC,IAAOC,KAAK,WAAWjC,KAAM,iBAAkBC,SAAU,QAE9E,sBAAKxC,UAAWC,IAAQqE,iBAAxB,oCAGI,cAACtC,EAAA,EAAD,CACEC,YAAa,gCACbI,UAAWC,IACXC,KAAM,4BACNC,SAAU,QAIhB,mBAAGxC,UAAWC,IAAQwE,cAAtB,uBACA,oBAAIzE,UAAWC,IAAQyE,mBAAvB,SACG9F,OAAO+F,KAAK5E,EAAM6E,QAAQC,UAAU9D,KAAI,SAAC+D,GACxC,OACE,8BACE,8BACGA,EADH,IACS,IACP,cAAC9C,EAAA,EAAD,CAAOC,YAAa6C,EAAKzC,UAAWkC,IAAOhC,KAAM,YAAcuC,EAAKtC,SAAU,SAHxEsC,QAUhB,0CACC/E,EAAMgF,OAAS,sBAAK/E,UAAWC,IAAQ8E,MAAxB,cAAiChF,EAAMgF,MAAvC,aCuBhBC,EAAc,SAAC,GAAwC,IAAtCJ,EAAqC,EAArCA,QAASK,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACvC,OACE,gCACE,oBAAGlF,UAAWC,IAAQqE,iBAAtB,mBACQ,+BAAOM,EAAQO,cAEvB,oBAAGnF,UAAWC,IAAQqE,iBAAtB,uBACY,+BAAOM,EAAQQ,aAE3B,oBAAGpF,UAAWC,IAAQqE,iBAAtB,gCACqB,+BAAOM,EAAQS,eAAiB,MAAQ,UAE7D,oBAAGrF,UAAWC,IAAQqE,iBAAtB,qCAC0B,+BAAOM,EAAQU,+BAEzC,mBAAGtF,UAAWC,IAAQwE,cAAtB,uBACA,oBAAIzE,UAAWC,IAAQyE,mBAAvB,SACG9F,OAAO+F,KAAKC,EAAQC,UAAU9D,KAAI,SAAC+D,GAClC,OAAIF,EAAQC,SAASC,GACZ,cAAC,EAAD,CAAmBS,aAAcT,EAAKU,aAAcZ,EAAQC,SAASC,IAAvDA,GAEd,UAIZG,GAAW,wBAAQQ,QAASP,EAAjB,sBAKZQ,EAAU,SAAC,GAAoC,IAAlCH,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC/B,OACE,+BACGD,EADH,IAEE,mBAAGI,KAAMH,EAAcI,OAAO,SAASC,IAAI,aAA3C,SACGL,QAMMM,EAnGK,SAAC,GAAiB,IAAfb,EAAc,EAAdA,QACrB,EAAgC5B,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BwC,aAAY,qBAAGhD,eAAnC6B,EAAR,EAAQA,QAASpB,EAAjB,EAAiBA,OACXP,EAAWS,cAEjB,IAAKkB,EACH,OAAO,cAAC,IAAD,IAcT,OACE,8BACE,sBAAK5E,UAAWC,IAAQ+F,iBAAxB,UACE,qBAAKhG,UAAWC,IAAQgG,OAAxB,SACE,qBACE7F,IAA8B,OAAzBwE,EAAQsB,OAAOC,MAAiBvB,EAAQsB,OAAOC,MAAQC,IAC5D/F,IAAI,qBAIR,sBAAKL,UAAWC,IAAQoG,MAAxB,UACE,cAAC,EAAD,CAAwBjD,cAAeI,IAEtCF,EACC,cAAC,EAAD,CACEgD,cAAe1B,EACfA,QAASA,EACTrD,SAvBK,SAACgF,GAChBtD,EAASuD,YAAYD,IAAWE,MAAK,WACnClD,GAAY,SAwBN,cAAC,EAAD,CACE2B,aAAc,WACZ3B,GAAY,IAEdqB,QAASA,EACTK,QAASA,IAIZA,GAAW,uBAAOT,KAAM,OAAQV,SAzCf,SAACC,GACrBA,EAAE6B,OAAOc,MAAMlH,QACjByD,EAAS0D,YAAU5C,EAAE6B,OAAOc,MAAM,iBCkCzBE,UAtCC,WACd,IAAMC,EAAWC,cAAXD,OAEA5D,EAAWS,cACXqD,EAAWhB,aAAY,qBAAGiB,KAAgBH,UAC1CI,EAAelB,aAAY,qBAAGiB,KAAgBE,UAE9CC,EAAiB,WAChBN,IACHA,EAASE,GAEX9D,EAASmE,YAAiBP,IAC1B5D,EAASoE,YAAUR,KAGjBS,EAxBN,SAAqB/H,GAEnB,IAAMgI,EAAMC,mBAIZ,OAHA7D,qBAAU,WACR4D,EAAIE,QAAUlI,IACb,CAACA,IACGgI,EAAIE,QAkBEC,CAAYb,GASzB,OAPAlD,qBAAU,WACRwD,IACIN,IAAWS,GACbH,OAKF,8BACIF,EAGA,qCACE,cAAC,EAAD,CAAahC,SAAU4B,IACvB,cAAC,EAAD,OAJF,cAAC,IAAD,CAAUc,GAAI","file":"static/js/5.5bb669ed.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoImg\":\"ProfileInfo_profileInfoImg__L8TPb\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3Zt8j\",\"avatar\":\"ProfileInfo_avatar__2pFrT\",\"aboutDescription\":\"ProfileInfo_aboutDescription__3MTYY\",\"aboutContacts\":\"ProfileInfo_aboutContacts__1vqzM\",\"aboutContactsLinks\":\"ProfileInfo_aboutContactsLinks__GCB7n\",\"status\":\"ProfileInfo_status__2vjbd\",\"input\":\"ProfileInfo_input__1-BbV\",\"error\":\"ProfileInfo_error__16DNL\"};","export default __webpack_public_path__ + \"static/media/Programmyi-dlya-sozdaniya-avatarok.d393fa70.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1U-D8\",\"postsBlock\":\"MyPosts_postsBlock__1TRPq\",\"myPosts\":\"MyPosts_myPosts__26IKL\",\"posts\":\"MyPosts_posts__2-ySP\",\"textarea\":\"MyPosts_textarea__ks6vM\",\"addPostBtn\":\"MyPosts_addPostBtn__3a33e\",\"inputsBtns\":\"MyPosts_inputsBtns__fKCVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__t-YW9\",\"itemMessage\":\"Post_itemMessage__35NWq\",\"likeCount\":\"Post_likeCount__33XZY\"};","import classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n    <div className={classes.item}>\r\n      <div className={classes.itemImg}>\r\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTgolBdeaXdt7hZ4G28YiA8shOCg4jkBg08uA&usqp=CAU' alt='Avatar...'/>\r\n        <p className={classes.itemMessage}> {props.message} </p>\r\n      </div>\r\n      \r\n\r\n      <div className={classes.likeCount}>\r\n        <span> Like</span> {props.likeCount}\r\n      </div>\r\n\r\n    </div>\r\n\r\n           \r\n  )\r\n}\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../common/formControls/FormsContols'\r\nimport { maxLength100, requiredField } from '../../common/validators/validators'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let Posts = [...props.postsData].reverse().map(post => (<Post message={post.message} key={post.id} likeCount = {post.likescount}/>))\r\n\r\n\r\n  const addNewPost = (values) =>{\r\n    props.addPost(values.textAreaValuePost)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n       \r\n       <div className={classes.postsBlock}>\r\n         <h3 className={classes.myPosts}>\r\n           My Posts\r\n         </h3>\r\n\r\n         <AddPostFormRedux onSubmit={addNewPost}/>\r\n\r\n         <div className={classes.posts}>\r\n\r\n           { Posts }\r\n      \r\n         </div>\r\n\r\n       </div>\r\n       \r\n     </div>\r\n  )\r\n})\r\n\r\nconst AddNewPostArea = (props) => {\r\n  return (\r\n    <form className={classes.inputsBtns} onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field \r\n            \r\n            placeholder='What you think?' \r\n            rows='7' \r\n            cols='70' \r\n            className={classes.textarea} \r\n            component={Textarea}\r\n            name='textAreaValuePost'\r\n            validate={[requiredField, maxLength100]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={classes.addPostBtn} >Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddPostFormRedux = reduxForm({form: 'profilePostValue'})(AddNewPostArea)\r\n\r\n\r\n\r\n\r\n\r\nexport default MyPosts","\r\nimport { connect } from 'react-redux'\r\nimport { addPostActionCreator } from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }  \r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (textAreaValuePost) => {\r\n      dispatch(addPostActionCreator(textAreaValuePost))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n\r\n\r\n// return (\r\n//   <StoreContext.Consumer>\r\n//     {\r\n//       (store) => {\r\n//         let state = store.getState()\r\n//         const onAddPost = () => {\r\n//           store.dispatch(addPostActionCreator())\r\n          \r\n//         }\r\n      \r\n//         const onPostChange = (text) => {\r\n//           store.dispatch(updateNewPostActionCreater(text))\r\n//         }\r\n//         return <MyPosts \r\n//             updateNewPostText = { onPostChange } \r\n//             addPost = { onAddPost } \r\n//             postsData={state.profilePage.postsData}\r\n//             newPostText = {state.profilePage.newPostText}\r\n//           />\r\n//         }\r\n//     }\r\n    \r\n//   </StoreContext.Consumer>\r\n// )","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateStatus } from '../../../redux/profileReducer';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHOoks = ({ profileStatus }) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(profileStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setStatus(profileStatus);\r\n  }, [profileStatus]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    dispatch(updateStatus(status));\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.inputWrapper}>\r\n      {!editMode && (\r\n        <div className={classes.status}>\r\n          STATUS:\r\n          <span onDoubleClick={activateEditMode}>\r\n            {profileStatus || 'change status(2 click on this text)'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            className={classes.input}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHOoks;\r\n","import classes from './ProfileInfo.module.css';\r\nimport { Input, Textarea } from '../../common/formControls/FormsContols';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst ProfileDataForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={classes.aboutDescription}>\r\n        Name:\r\n        {<Field placeholder={'Name'} component={Input} name={'fullName'} validate={[]} />}\r\n      </div>\r\n      <div className={classes.aboutDescription}>\r\n        About me:\r\n        {<Field placeholder={'About me'} component={Textarea} name={'aboutMe'} validate={[]} />}\r\n      </div>\r\n      <div className={classes.aboutDescription}>\r\n        Looking for a job:\r\n        {<Field component={Input} type=\"checkbox\" name={'lookingForAJob'} validate={[]} />}\r\n      </div>\r\n      <div className={classes.aboutDescription}>\r\n        My professional skills:\r\n        {\r\n          <Field\r\n            placeholder={'Looking for a job description'}\r\n            component={Textarea}\r\n            name={'lookingForAJobDescription'}\r\n            validate={[]}\r\n          />\r\n        }\r\n      </div>\r\n      <p className={classes.aboutContacts}>Contacts:</p>\r\n      <ul className={classes.aboutContactsLinks}>\r\n        {Object.keys(props.profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key}>\r\n              <b>\r\n                {key}:{' '}\r\n                <Field placeholder={key} component={Input} name={'contacts.' + key} validate={[]} />\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <button>Save</button>\r\n      {props.error && <div className={classes.error}> {props.error} </div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import Preloader from '../../common/preloader/preloader';\r\nimport classes from './ProfileInfo.module.css';\r\nimport userphoto from '../../../assets/Programmyi-dlya-sozdaniya-avatarok.png';\r\nimport ProfileStatusWithHOoks from './ProfileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\nimport { useSelector } from 'react-redux';\r\nimport { savePhoto, saveProfile } from '../../../redux/profileReducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ProfileInfo = ({ isOwner }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const { profile, status } = useSelector(({ profilePage }) => profilePage);\r\n  const dispatch = useDispatch();\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const mainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      dispatch(savePhoto(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    dispatch(saveProfile(formData)).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.descriptionBlock}>\r\n        <div className={classes.avatar}>\r\n          <img\r\n            src={profile.photos.large !== null ? profile.photos.large : userphoto}\r\n            alt=\"profile avatar\"\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.about}>\r\n          <ProfileStatusWithHOoks profileStatus={status} />\r\n\r\n          {editMode ? (\r\n            <ProfileDataFormReduxForm\r\n              initialValues={profile}\r\n              profile={profile}\r\n              onSubmit={onSubmit}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              goToEditMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n            />\r\n          )}\r\n\r\n          {isOwner && <input type={'file'} onChange={mainPhotoSelected} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//PROFILE DATA\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      <p className={classes.aboutDescription}>\r\n        Name: <span>{profile.fullName}</span>\r\n      </p>\r\n      <p className={classes.aboutDescription}>\r\n        About me: <span>{profile.aboutMe}</span>\r\n      </p>\r\n      <p className={classes.aboutDescription}>\r\n        Looking for a job: <span>{profile.lookingForAJob ? 'Yes' : 'No'}</span>\r\n      </p>\r\n      <p className={classes.aboutDescription}>\r\n        My professional skills: <span>{profile.lookingForAJobDescription}</span>\r\n      </p>\r\n      <p className={classes.aboutContacts}>Contacts:</p>\r\n      <ul className={classes.aboutContactsLinks}>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          if (profile.contacts[key]) {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />;\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </ul>\r\n      {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <li>\r\n      {contactTitle}:\r\n      <a href={contactValue} target=\"_blank\" rel=\"noreferrer\">\r\n        {contactValue}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import { useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { getStatus, userProfileThunk } from '../../redux/profileReducer';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nfunction usePrevious(value) {\r\n  //custom hook for prev value\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n\r\nconst Profile = () => {\r\n  let { userId } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const authUser = useSelector(({ auth }) => auth.userId);\r\n  const authRedirect = useSelector(({ auth }) => auth.isAuth);\r\n\r\n  const refreshProfile = () => {\r\n    if (!userId) {\r\n      userId = authUser;\r\n    }\r\n    dispatch(userProfileThunk(userId));\r\n    dispatch(getStatus(userId));\r\n  };\r\n\r\n  let prevId = usePrevious(userId);\r\n\r\n  useEffect(() => {\r\n    refreshProfile();\r\n    if (userId !== prevId) {\r\n      refreshProfile();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {!authRedirect ? (\r\n        <Redirect to={'/login'} />\r\n      ) : (\r\n        <>\r\n          <ProfileInfo isOwner={!userId} />\r\n          <MyPostsContainer />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}